<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.cxdai.console.customer.information.mapper.MemberMapper">
	
	<!-- 返回的结果集 -->
	<resultMap type="com.cxdai.console.customer.information.vo.MemberVo" id="memberResultMap">
		<id property="id" column="id" />
		<result property="username" 			column="USERNAME" />
		<result property="logpassword" 			column="LOGPASSWORD" />
		<result property="paypassword" 			column="PAYPASSWORD" />
		<result property="headimg" 				column="HEADIMG" />
		<result property="email"	    		column="EMAIL" />
		<result property="status"  				column="STATUS" />
		<result property="borrowtimes" 			column="BORROWTIMES" />
		<result property="investtimes" 			column="INVESTTIMES" />
		<result property="logintimes" 			column="LOGINTIMES" />
		<result property="addtime" 			    column="ADDTIME" />
		<result property="addip" 				column="ADDIP" />
		<result property="shareperson" 			column="SHAREPERSON" />
		<result property="lastlogintime" 		column="LASTLOGINTIME" />
		<result property="lastloginip" 			column="LASTLOGINIP" />
		<result property="useridmd5" 			column="USERIDMD5" />
		<result property="inviterid"            column="INVITERID"/>
		<result property="awardmoney" 			column="AWARDMONEY" />
		<result property="accumulatepoints" 	column="ACCUMULATEPOINTS"/>
		<result property="type" 				column="TYPE" />	
		<result property="source" 				column="SOURCE" />
		<result property="gainaccumulatepoints" column="GAINACCUMULATEPOINTS" />
		<result property="province" 			column="PROVINCE" />			
		<result property="city" 				column="CITY" />
		<result property="area" 				column="AREA" />
		<result property="isEmployeer" 			column="IS_EMPLOYEER" />
		<result property="isFinancialUser" 		column="IS_FINANCIAL_USER" />	
		<result property="qq" 					column="QQ" />
		<result property="wxNo" 				column="WX_NO" />
		<result property="emailPassword" 		column="EMAIL_PASSWORD" />	
		<result property="realName" 			column="realName" />	
		<result property="mobileNum" 			column="mobileNum" />	
		<result property="isVip" 				column="isVip" />	
		<result property="useMoney" 			column="USE_MONEY" />
		<result property="noUseMoney" 			column="NO_USE_MONEY" />
		<result property="collection"	    	column="COLLECTION" />
		<result property="firstBorrowUseMoney" 	column="FIRST_BORROW_USE_MONEY" />
		<result property="drawMoney"			column="DRAW_MONEY"/>
		<result property="noDrawMoney" 			column="NO_DRAW_MONEY"/>
		<result property="addtimeDate" 			column="ADDTIME_DATE" />
		<result property="curTotal" 			column="cur_total" />
		<result property="fixTotal" 			column="fix_total" />
		<result property="eUseMoney" 			column="e_use_money" />
		<result property="eFreezeMoney" 		column="e_freeze_money" />
		<result property="eCollection" 			column="e_collection" />
		<result property="isCustody" 			column="IS_CUSTODY" />
	</resultMap>
	
	<!--基本列 -->
	<sql id="memberColumn">
		m.ID, 
		m.USERNAME, 
		m.LOGPASSWORD, 
		m.PAYPASSWORD, 
		m.HEADIMG, 
		m.EMAIL, 
		m.STATUS, 
		m.BORROWTIMES, 
		m.INVESTTIMES, 
		m.LOGINTIMES, 
		m.ADDTIME, 
		m.ADDIP, 
		m.SHAREPERSON, 
		m.LASTLOGINTIME, 
		m.LASTLOGINIP, 
		m.USERIDMD5, 
		m.INVITERID, 
		m.AWARDMONEY, 
		m.ACCUMULATEPOINTS, 
		m.TYPE, 
		m.SOURCE, 
		m.GAINACCUMULATEPOINTS, 
		m.PROVINCE, 
		m.CITY, 
		m.AREA, 
		m.IS_EMPLOYEER, 
		m.IS_FINANCIAL_USER, 
		m.QQ, 
		m.WX_NO, 
		m.EMAIL_PASSWORD,
		m.IS_CUSTODY
	</sql>
	
	
	<!-- Member结果集 -->
	<resultMap type="com.cxdai.console.customer.information.entity.Member" id="memberEntityResultMap">
		<id property="id" column="id" />
		<result property="username" 			column="USERNAME" />
		<result property="logpassword" 			column="LOGPASSWORD" />
		<result property="paypassword" 			column="PAYPASSWORD" />
		<result property="headimg" 				column="HEADIMG" />
		<result property="email"	    		column="EMAIL" />
		<result property="status"  				column="STATUS" />
		<result property="borrowtimes" 			column="BORROWTIMES" />
		<result property="investtimes" 			column="INVESTTIMES" />
		<result property="logintimes" 			column="LOGINTIMES" />
		<result property="addtime" 			    column="ADDTIME" />
		<result property="addip" 				column="ADDIP" />
		<result property="shareperson" 			column="SHAREPERSON" />
		<result property="lastlogintime" 		column="LASTLOGINTIME" />
		<result property="lastloginip" 			column="LASTLOGINIP" />
		<result property="useridmd5" 			column="USERIDMD5" />
		<result property="inviterid"            column="INVITERID"/>
		<result property="awardmoney" 			column="AWARDMONEY" />
		<result property="accumulatepoints" 	column="ACCUMULATEPOINTS"/>
		<result property="type" 				column="TYPE" />	
		<result property="source" 				column="SOURCE" />
		<result property="gainaccumulatepoints" column="GAINACCUMULATEPOINTS" />
		<result property="province" 			column="PROVINCE" />			
		<result property="city" 				column="CITY" />
		<result property="area" 				column="AREA" />
		<result property="isEmployeer" 			column="IS_EMPLOYEER" />
		<result property="isFinancialUser" 		column="IS_FINANCIAL_USER" />	
		<result property="qq" 					column="QQ" />
		<result property="wxNo" 				column="WX_NO" />
		<result property="emailPassword" 		column="EMAIL_PASSWORD" />	
	</resultMap>
	
	<!--会员基本列 -->
	<sql id="memberBaseColumn">
		m.ID, 
		m.USERNAME, 
		m.LOGPASSWORD, 
		m.PAYPASSWORD, 
		m.HEADIMG, 
		m.EMAIL, 
		m.STATUS, 
		m.BORROWTIMES, 
		m.INVESTTIMES, 
		m.LOGINTIMES, 
		m.ADDTIME, 
		m.ADDIP, 
		m.SHAREPERSON, 
		m.LASTLOGINTIME, 
		m.LASTLOGINIP, 
		m.USERIDMD5, 
		m.INVITERID, 
		m.AWARDMONEY, 
		m.ACCUMULATEPOINTS, 
		m.TYPE, 
		m.SOURCE, 
		m.GAINACCUMULATEPOINTS, 
		m.PROVINCE, 
		m.CITY, 
		m.AREA, 
		m.IS_EMPLOYEER, 
		m.IS_FINANCIAL_USER, 
		m.QQ, 
		m.WX_NO, 
		m.EMAIL_PASSWORD
	</sql>
	
	<!-- 插入记录，返回主键 -->
	<insert id="insertEntity" parameterType="com.cxdai.console.customer.information.entity.Member">
		INSERT INTO rocky_member 
		(USERNAME, 	LOGPASSWORD, 	PAYPASSWORD, 	HEADIMG, 	EMAIL, 		STATUS, 	BORROWTIMES, 	INVESTTIMES, 
		 LOGINTIMES, 	ADDTIME, 	ADDIP, 		SHAREPERSON, 	LASTLOGINTIME, 	LASTLOGINIP, 	USERIDMD5, 	INVITERID, 
		 AWARDMONEY, 	ACCUMULATEPOINTS, 	TYPE, 	SOURCE,		TID,   platform,  		GAINACCUMULATEPOINTS, 	PROVINCE, 	CITY, 	AREA, 
		 IS_EMPLOYEER, 	IS_FINANCIAL_USER, 	QQ, 	WX_NO, 		EMAIL_PASSWORD	)
		VALUES
		(#{username},#{logpassword},#{paypassword},	#{headimg},	#{email},	#{status},   #{borrowtimes},#{investtimes}, 
		#{logintimes}, 	#{addtime},	#{addip},	#{shareperson},	#{lastlogintime},#{lastloginip},#{useridmd5},#{inviterid},
		#{awardmoney},  #{accumulatepoints}, #{type},#{source},#{tId},#{platform},#{gainaccumulatepoints}, #{province},#{city},#{area},
		#{isEmployeer}, #{isFinancialUser}, #{qq},	#{wxNo},	#{emailPassword} )
		
 		 <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">  
      	    SELECT LAST_INSERT_ID() AS ID    
   		 </selectKey>
	</insert>
	
  	<!-- 根据ID查询 -->
	<select id="queryById" parameterType="java.lang.Integer" resultMap="memberEntityResultMap" >
		select 	
		   <include refid="memberBaseColumn"/>
		from
			rocky_member m
		where 1=1
		and m.id=#{id}
  	</select>
	
  <!-- 更新会员 -->
  <update id="updateEntity" parameterType="com.cxdai.console.customer.information.entity.Member" >
    update rocky_member
    <set >
      <if test="username != null" >
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="logpassword != null" >
        LOGPASSWORD = #{logpassword,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null" >
        PAYPASSWORD = #{paypassword,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null" >
        HEADIMG = #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="borrowtimes != null" >
        BORROWTIMES = #{borrowtimes,jdbcType=INTEGER},
      </if>
      <if test="investtimes != null" >
        INVESTTIMES = #{investtimes,jdbcType=INTEGER},
      </if>
      <if test="logintimes != null" >
        LOGINTIMES = #{logintimes,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        ADDTIME = #{addtime,jdbcType=VARCHAR},
      </if>
      <if test="addip != null" >
        ADDIP = #{addip,jdbcType=VARCHAR},
      </if>
      <if test="shareperson != null" >
        SHAREPERSON = #{shareperson,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        LASTLOGINTIME = #{lastlogintime,jdbcType=VARCHAR},
      </if>
      <if test="lastloginip != null" >
        LASTLOGINIP = #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="useridmd5 != null" >
        USERIDMD5 = #{useridmd5,jdbcType=VARCHAR},
      </if>
      <if test="inviterid != null" >
        INVITERID = #{inviterid,jdbcType=INTEGER},
      </if>
      <if test="awardmoney != null" >
        AWARDMONEY = #{awardmoney,jdbcType=DOUBLE},
      </if>
      <if test="accumulatepoints != null" >
        ACCUMULATEPOINTS = #{accumulatepoints,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        SOURCE = #{source,jdbcType=INTEGER},
      </if>
      <if test="gainaccumulatepoints != null" >
        GAINACCUMULATEPOINTS = #{gainaccumulatepoints,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        PROVINCE = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        CITY = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        AREA = #{area,jdbcType=VARCHAR},
      </if>
      <if test="isEmployeer != null" >
        IS_EMPLOYEER = #{isEmployeer,jdbcType=INTEGER},
      </if>
      <if test="isFinancialUser != null" >
        IS_FINANCIAL_USER = #{isFinancialUser,jdbcType=INTEGER},
      </if>
      <if test="isFinancialUser != null" >
        IS_FINANCIAL_USER = #{isFinancialUser,jdbcType=INTEGER},
      </if>
      <if test="qq != null" >
        QQ = #{qq},
      </if> 
      <if test="wxNo != null" >
        WX_NO = #{wxNo},
      </if>    
      <if test="emailPassword != null" >
        EMAIL_PASSWORD = #{emailPassword},
      </if>
    </set>
    where ID = #{id}
  </update>
	
	
	<!-- 根据条件查询记录集合 -->
	<select id="queryMemberVoList" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultMap="memberResultMap" >
		select
		<include refid="memberColumn"/>,RA.realName realName,MA.mobileNum mobileNum 
		from rocky_member m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		where 1= 1
		<if test="username != null and username != ''">
			and m.USERNAME like concat('%',#{username},'%')
		</if>
		<if test="realName != null and realName != ''">
			and RA.REALNAME like concat('%',#{realName},'%')
		</if>
		order by m.id
  	</select>
  	<!-- 根据条件查询记录数量-->
	<select id="queryMemberVoCount" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultType="java.lang.Integer" >			
		select count(*)
		from rocky_member m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		where 1= 1
		<if test="username != null and username != ''">
			and m.USERNAME like concat('%',#{username},'%')
		</if>
		<if test="realName != null and realName != ''">
			and RA.REALNAME like concat('%',#{realName},'%')
		</if>		
  	</select>
  	
  	<!-- 根据Id查询记录-->
  	<select id="queryMemberById" parameterType="java.lang.Integer" resultMap="memberResultMap" >
		select
		<include refid="memberColumn"/>
		from rocky_member m
		where m.id = #{id}
  	</select>
  	
  	<!-- 客户信息查询数量-->
	<select id="queryMemberVoListForCount" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultType="java.lang.Integer" >
	select count(1)
		from (select ID,SOURCE, STATUS,USERNAME,EMAIL,ADDTIME,IS_FINANCIAL_USER,LASTLOGINTIME,LOGINTIMES,IS_CUSTODY from rocky_member a where 1=1
			<if test="username != null and username != ''">
				and a.USERNAME like concat(#{username},'%')
			</if>
			 <if test="userId != null and userId != ''">
				and a.ID  = #{userId}
			</if>
			 
			<if test="email != null and email != ''">
				and a.email = #{email}
			</if>
			<if test="addtimeBeginStr != null and addtimeBeginStr != ''">
				AND a.ADDTIME <![CDATA[>=]]> #{addtimeBeginStr}
			</if>
			<if test="addtimeEndStr != null and addtimeEndStr != ''">
				AND a.ADDTIME <![CDATA[<=]]> #{addtimeEndStr}
			</if>
			<if test="status != null and status != 10000">
				AND a.STATUS = #{status}
			</if>
			<if test="usersType != null  and usersType != 10000">
				AND a.IS_FINANCIAL_USER = #{usersType}
			</if>
		    <if test="memberSource != null  and memberSource != '' ">
				AND a.SOURCE = #{memberSource}
			</if>
        <if test="isCustody != null">
            <if test="isCustody == 0">
                and (a.IS_CUSTODY = #{isCustody} OR a.IS_CUSTODY is null)
            </if>
            <if test="isCustody == 1">
                and a.IS_CUSTODY = #{isCustody}
            </if>
        </if>
         <!-- <if test="  (redmoney != null and redmoney != '') or (redsource != null and redsource != '') or
					   (beginTime != null and beginTime != '') or (endTime != null and endTime != '') or
					   (usebeginTime != null and usebeginTime != '') or (useendTime != null and useendTime != '') or
					   (redstatus != null and redstatus != '')  ">
		    	AND a.id in (select red.USER_ID from  t_red_envelop_account red where red.USER_ID=a.id 
							<if test="redmoney != null and redmoney != ''">
								AND red.MONEY = #{redmoney}
							</if>
							<if test="beginTime != null and beginTime != ''">
								AND red.ADD_TIME <![CDATA[>=]]>
								#{beginTime}
							</if>
							<if test="endTime != null and endTime != ''">
								AND red.ADD_TIME <![CDATA[<=]]>
								#{endTime}
							</if>
							<if test="redsource != null and redsource != ''">
								AND red.RED_TYPE = #{redsource}
							</if>
							<if test="usebeginTime != null and usebeginTime != ''">
								AND red.USE_TIME <![CDATA[>=]]>
								#{usebeginTime}
							</if>
							<if test="useendTime != null and useendTime != ''">
								AND red.USE_TIME <![CDATA[<=]]>
								#{useendTime}
							</if>
							<if test="redstatus != null and redstatus != '' ">
								AND red.STATUS = #{redstatus}
							</if>
		                    )  
		   </if>   -->	  
		) m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		LEFT JOIN rocky_vip_appro va on m.id = va.USER_ID		 
		LEFT JOIN rocky_account a on m.id = a.USER_ID
		<if test="useTotalStatrt != null and useTotalStatrt != ''">
			AND (a.USE_MONEY+a.e_use_money+a.FIRST_BORROW_USE_MONEY) <![CDATA[>=]]>#{useTotalStatrt}
		</if>
		<if test="useTotalEnd != null and useTotalEnd != '' ">
			AND (a.USE_MONEY+a.e_use_money+a.FIRST_BORROW_USE_MONEY) <![CDATA[<=]]>#{useTotalEnd}
		</if>
		LEFT JOIN t_cur_account cur on m.id = cur.USER_ID 
		 <if test="curTotalStatrt != null and curTotalStatrt != ''">
			AND cur.cur_total <![CDATA[>=]]>#{curTotalStatrt}
		 </if>
		<if test="curTotalEnd != null and curTotalEnd != '' ">
			AND cur.cur_total <![CDATA[<=]]>#{curTotalEnd}
		</if>
		LEFT JOIN (SELECT USER_ID,SUM(c.ACCOUNT) as fixCapitalTotal FROM t_fix_tender_detail c 		 
		 where c.status in(0,1) GROUP by USER_ID) fix on m.id = fix.USER_ID 
		LEFT JOIN (SELECT USER_ID,SUM(co.INTEREST) as fixInvestNoTotal FROM t_fix_collectionrecord co 		 
		 where co.status=0  GROUP by USER_ID) coll on m.id = coll.USER_ID 
		where 1=1
			<if test="realName != null and realName != ''">
			AND RA.REALNAME like concat(#{realName},'%')
			</if>
			<if test="mobileNum != null and mobileNum != ''">
			AND MA.MOBILENUM = #{mobileNum}
			</if>
			<if test="accountTotalStatrt != null and accountTotalStatrt != ''">
			   AND (a.DRAW_MONEY+a.NO_DRAW_MONEY+a.NO_USE_MONEY+a.COLLECTION+a.FIRST_BORROW_USE_MONEY+IFNULL(cur.TOTAL,0)+IFNULL(fix.fixCapitalTotal,0)+IFNULL(coll.fixInvestNoTotal,0)+a.e_use_money+a.e_freeze_money+a.e_collection)  <![CDATA[>=]]>#{accountTotalStatrt}
		    </if>
			<if test="accountTotalEnd != null and accountTotalEnd != '' ">
				AND (a.DRAW_MONEY+a.NO_DRAW_MONEY+a.NO_USE_MONEY+a.COLLECTION+a.FIRST_BORROW_USE_MONEY+IFNULL(cur.TOTAL,0)+IFNULL(fix.fixCapitalTotal,0)+IFNULL(coll.fixInvestNoTotal,0)+a.e_use_money+a.e_freeze_money+a.e_collection)  <![CDATA[<=]]>#{accountTotalEnd}
			</if>   
  	</select>
  	
  	  	<!-- 客户信息查询 改版-->
	<select id="queryMemberVoListForPages" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultMap="memberResultMap" >
		select (a.DRAW_MONEY+a.NO_DRAW_MONEY+a.NO_USE_MONEY+a.COLLECTION+a.FIRST_BORROW_USE_MONEY+IFNULL(cur.TOTAL,0)+IFNULL(fix.fixCapitalTotal,0)+IFNULL(coll.fixInvestNoTotal,0)+a.e_use_money+a.e_freeze_money+a.e_collection) as TOTAL,
		m.id,m.id as userId,m.SOURCE, m.STATUS,a.USE_MONEY,a.DRAW_MONEY,a.NO_DRAW_MONEY,a.NO_USE_MONEY,a.COLLECTION,a.FIRST_BORROW_USE_MONEY,a.e_use_money as eUseMoney ,a.e_freeze_money,a.e_collection , m.USERNAME, m.EMAIL,  m.ADDTIME,m.LASTLOGINTIME,m.LOGINTIMES,   m.IS_FINANCIAL_USER,RA.realName realName,MA.mobileNum mobileNum,case WHEN va.PASSED = 1 then 1 else 0 end as isVip,
		IFNULL(cur.TOTAL,0) as cur_total,(IFNULL(fix.fixCapitalTotal,0)+IFNULL(coll.fixInvestNoTotal,0)) as fix_total,m.IS_CUSTODY
		from (select ID,SOURCE, STATUS,USERNAME,EMAIL,ADDTIME,IS_FINANCIAL_USER,LASTLOGINTIME,LOGINTIMES,IS_CUSTODY from rocky_member a where 1=1
			<if test="username != null and username != ''">
				and a.USERNAME like concat(#{username},'%')
			</if>
			 <if test="userId != null and userId != ''">
				and a.ID  = #{userId}
			</if>
			 
			<if test="email != null and email != ''">
				and a.email = #{email}
			</if>
			<if test="addtimeBeginStr != null and addtimeBeginStr != ''">
				AND a.ADDTIME <![CDATA[>=]]> #{addtimeBeginStr}
			</if>
			<if test="addtimeEndStr != null and addtimeEndStr != ''">
				AND a.ADDTIME <![CDATA[<=]]> #{addtimeEndStr}
			</if>
			<if test="status != null and status != 10000">
				AND a.STATUS = #{status}
			</if>
			<if test="usersType != null  and usersType != 10000">
				AND a.IS_FINANCIAL_USER = #{usersType}
			</if>
		    <if test="memberSource != null  and memberSource != '' ">
				AND a.SOURCE = #{memberSource}
			</if>
        <if test="isCustody != null">
            <if test="isCustody == 0">
                and (a.IS_CUSTODY = #{isCustody} OR a.IS_CUSTODY is null)
            </if>
            <if test="isCustody == 1">
                and a.IS_CUSTODY = #{isCustody}
            </if>
        </if>
        <!--  <if test="  (redmoney != null and redmoney != '') or (redsource != null and redsource != '') or
					   (beginTime != null and beginTime != '') or (endTime != null and endTime != '') or
					   (usebeginTime != null and usebeginTime != '') or (useendTime != null and useendTime != '') or
					   (redstatus != null and redstatus != '')  ">
		    	AND a.id in (select red.USER_ID from  t_red_envelop_account red where red.USER_ID=a.id 
							<if test="redmoney != null and redmoney != ''">
								AND red.MONEY = #{redmoney}
							</if>
							<if test="beginTime != null and beginTime != ''">
								AND red.ADD_TIME <![CDATA[>=]]>
								#{beginTime}
							</if>
							<if test="endTime != null and endTime != ''">
								AND red.ADD_TIME <![CDATA[<=]]>
								#{endTime}
							</if>
							<if test="redsource != null and redsource != ''">
								AND red.RED_TYPE = #{redsource}
							</if>
							<if test="usebeginTime != null and usebeginTime != ''">
								AND red.USE_TIME <![CDATA[>=]]>
								#{usebeginTime}
							</if>
							<if test="useendTime != null and useendTime != ''">
								AND red.USE_TIME <![CDATA[<=]]>
								#{useendTime}
							</if>
							<if test="redstatus != null and redstatus != '' ">
								AND red.STATUS = #{redstatus}
							</if>
		                    )  
		   </if>   -->	  
		) m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		LEFT JOIN rocky_vip_appro va on m.id = va.USER_ID		 
		LEFT JOIN rocky_account a on m.id = a.USER_ID
		<if test="useTotalStatrt != null and useTotalStatrt != ''">
			AND (a.USE_MONEY+a.e_use_money+a.FIRST_BORROW_USE_MONEY) <![CDATA[>=]]>#{useTotalStatrt}
		</if>
		<if test="useTotalEnd != null and useTotalEnd != '' ">
			AND (a.USE_MONEY+a.e_use_money+a.FIRST_BORROW_USE_MONEY) <![CDATA[<=]]>#{useTotalEnd}
		</if>
		LEFT JOIN t_cur_account cur on m.id = cur.USER_ID 
		 <if test="curTotalStatrt != null and curTotalStatrt != ''">
			AND cur.cur_total <![CDATA[>=]]>#{curTotalStatrt}
		 </if>
		<if test="curTotalEnd != null and curTotalEnd != '' ">
			AND cur.cur_total <![CDATA[<=]]>#{curTotalEnd}
		</if>
		LEFT JOIN (SELECT USER_ID,SUM(c.ACCOUNT) as fixCapitalTotal FROM t_fix_tender_detail c 		 
		 where c.status in(0,1) GROUP by USER_ID) fix on m.id = fix.USER_ID 
		LEFT JOIN (SELECT USER_ID,SUM(co.INTEREST) as fixInvestNoTotal FROM t_fix_collectionrecord co 		 
		 where co.status=0  GROUP by USER_ID) coll on m.id = coll.USER_ID 
		where 1=1
			<if test="realName != null and realName != ''">
			AND RA.REALNAME like concat(#{realName},'%')
			</if>
			<if test="mobileNum != null and mobileNum != ''">
			AND MA.MOBILENUM = #{mobileNum}
			</if>
			<if test="accountTotalStatrt != null and accountTotalStatrt != ''">
			   AND (a.DRAW_MONEY+a.NO_DRAW_MONEY+a.NO_USE_MONEY+a.COLLECTION+a.FIRST_BORROW_USE_MONEY+IFNULL(cur.TOTAL,0)+IFNULL(fix.fixCapitalTotal,0)+IFNULL(coll.fixInvestNoTotal,0)+a.e_use_money+a.e_freeze_money+a.e_collection)  <![CDATA[>=]]>#{accountTotalStatrt}
		    </if>
			<if test="accountTotalEnd != null and accountTotalEnd != '' ">
				AND (a.DRAW_MONEY+a.NO_DRAW_MONEY+a.NO_USE_MONEY+a.COLLECTION+a.FIRST_BORROW_USE_MONEY+IFNULL(cur.TOTAL,0)+IFNULL(fix.fixCapitalTotal,0)+IFNULL(coll.fixInvestNoTotal,0)+a.e_use_money+a.e_freeze_money+a.e_collection)  <![CDATA[<=]]>#{accountTotalEnd}
			</if>   
		  order by 
		  	<if test="sortName != null and sortName != ''">
				${sortName} ${sortMode},
			</if>
			  m.id
		    limit #{_offset},#{_limit}
  	</select>
  	<!-- 客户信息查询，用于数据导出 -->
	<select id="queryMemberVoListForExport" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultMap="memberResultMap" >
		select m.SOURCE,a.TOTAL,m.id, m.STATUS,a.USE_MONEY,a.DRAW_MONEY,a.NO_DRAW_MONEY,a.NO_USE_MONEY,a.COLLECTION,a.FIRST_BORROW_USE_MONEY,  m.USERNAME, m.EMAIL,  m.ADDTIME,m.LASTLOGINTIME,m.LOGINTIMES,   m.IS_FINANCIAL_USER,RA.realName realName,MA.mobileNum mobileNum,case WHEN va.PASSED = 1 then 1 else 0 end as isVip
		from (select ID, STATUS,USERNAME,EMAIL,ADDTIME,IS_FINANCIAL_USER,LASTLOGINTIME,LOGINTIMES,SOURCE from rocky_member a where 1=1 
			<if test="username != null and username != ''">
				and a.USERNAME like concat(#{username},'%')
			</if>
			 
			<if test="email != null and email != ''">
				and a.email = #{email}
			</if>
			<if test="addtimeBeginStr != null and addtimeBeginStr != ''">
				AND a.ADDTIME <![CDATA[>=]]> #{addtimeBeginStr}
			</if>
			<if test="addtimeEndStr != null and addtimeEndStr != ''">
				AND a.ADDTIME <![CDATA[<=]]> #{addtimeEndStr}
			</if>
			<if test="status != null and status != 10000">
				AND a.STATUS = #{status}
			</if>
			<if test="usersType != null  and usersType != 10000">
				AND a.IS_FINANCIAL_USER = #{usersType}
			</if>
		
		) m 
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
			
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
			
		LEFT JOIN rocky_vip_appro va on m.id = va.USER_ID		 
		LEFT JOIN rocky_account a on m.id = a.USER_ID where 1=1
			<if test="realName != null and realName != ''">
			AND RA.REALNAME like concat(#{realName},'%')
			</if>
			<if test="mobileNum != null and mobileNum != ''">
			AND MA.MOBILENUM = #{mobileNum}
			</if>
		  order by 
		  	<if test="sortName != null and sortName != ''">
				${sortName} ${sortMode},
			</if>
			  m.id
		
		
<!-- 		select -->
<!-- 		<include refid="memberColumn"/>,RA.realName realName,MA.mobileNum mobileNum -->
<!-- 		from rocky_member m -->
<!-- 		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1 -->
<!-- 		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1 -->
<!-- 		where 1= 1  -->
<!-- 		and m.STATUS = 0  -->
<!-- 		AND m.IS_FINANCIAL_USER = 1  -->
<!-- 		<if test="username != null and username != ''"> -->
<!-- 			and m.USERNAME like concat(#{username},'%') -->
<!-- 		</if> -->
<!-- 		<if test="email != null and email != ''"> -->
<!-- 			and m.email = #{email} -->
<!-- 		</if> -->
<!-- 		<if test="realName != null and realName != ''"> -->
<!-- 			and RA.REALNAME like concat(#{realName},'%') -->
<!-- 		</if> -->
<!-- 		<if test="mobileNum != null and mobileNum != ''"> -->
<!-- 			AND MA.MOBILENUM = #{mobileNum} -->
<!-- 		</if> -->
<!-- 		<if test="addtimeBeginStr != null and addtimeBeginStr != ''"> -->
<!-- 			AND m.ADDTIME <![CDATA[>=]]> #{addtimeBeginStr} -->
<!-- 		</if> -->
<!-- 		<if test="addtimeEndStr != null and addtimeEndStr != ''"> -->
<!-- 			AND m.ADDTIME <![CDATA[<=]]> #{addtimeEndStr} -->
<!-- 		</if> -->
  	</select>  	
  	
  	<!-- 用户认证通过更新论坛角色 -->
  	<update id="updateBbsUserGroupForRegistered" parameterType="Integer">
  		update t_bbs_user_group set GROUP_ID = 4 where USER_ID = #{userId}
  	</update>
  	
  	<!-- 用户认证通过更新论坛权限 -->
  	<insert id="insertBbsUserPermissionForRegistered" parameterType="Integer">
		insert into t_bbs_user_permission(USER_ID, PERMISSION_ID, COLUMN_ID)
		select #{userId}, p.ID as permissionId, c.ID as columnId from
		(select ID, `NAME` from t_bbs_permission where STATUS = 0 and NAME in ('post', 'reply', 'signin', 'collect', 'support')) p,
		(select ID, ISPOSTPUBLIC from rocky_bbs_columns where STATUS = 0 and PARENTID is not null) c
		where c.ISPOSTPUBLIC = 1 or (c.ISPOSTPUBLIC = 0 and p.NAME != 'post')
  	</insert>
  	
  	<select id="getMemberIdByUserName" parameterType="java.lang.String" resultType="java.lang.Integer" >
		select  m.id  from  rocky_member m where m.userName=#{userName} 
  	</select>
  	
  	<!-- 验证重复数据,邮箱通过审核才算生效-->
	<select id="queryRepeatMemberCount" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultType="java.lang.Integer" >
		select count(m.id)
		from
	    rocky_member m left JOIN rocky_email_appro rea
               ON m.ID = rea.USER_ID
		where 1=1  
		<if test="id != null">
			and m.id !=#{id}
		</if>
		<if test="username != null and username !=''">
			and m.username = #{username}
		</if>
		<if test="email !=null and email !=''">
			and m.EMAIL =#{email}
				AND ((rea.id is not null and rea.CHECKED = 1)) 
		</if>
  	</select>
  	
  	<!-- 根据用户名查询记录 -->
  	<select id="queryMemberVoByUsername" parameterType="java.lang.String" resultMap="memberResultMap" >
		select
		<include refid="memberColumn"/>
		from rocky_member m
		where m.STATUS = 0 and m.USERNAME = trim(#{username}) 
  	</select> 
  	<!-- 更新所有借款用户密码 -->
  	<select id="updateBorrowMemberPassword">
  		UPDATE rocky_member
			SET LOGPASSWORD = MD5(#{password})
			WHERE IS_FINANCIAL_USER = 0;
  	</select>
  	
  	<update id="updateLoginPwd"  parameterType="java.util.Map" >
  	  update    rocky_member set  LOGPASSWORD=#{logpwd}  where  USERNAME = #{username}
  	</update>
  	
  	
  	<update id="updateDealPwd"  parameterType="java.util.Map" >
  	  update    rocky_member set  PAYPASSWORD=#{dealpwd}  where  USERNAME = #{username}
  	</update>
  	
  	<!--新注册用户初始化论坛角色 -->
  	<insert id="insertBbsUserGroupForUncertified" parameterType="Integer">
  		insert into t_bbs_user_group(USER_ID, GROUP_ID) values (#{userId}, 5)
  	</insert>
  	
  	<sql id="memberNewColumn">
		m.ID, 
		m.USERNAME, 
		m.LOGPASSWORD, 
		m.PAYPASSWORD, 
		m.HEADIMG, 
		m.EMAIL, 
		m.STATUS, 
		m.BORROWTIMES, 
		m.INVESTTIMES, 
		m.LOGINTIMES, 
		FROM_UNIXTIME(m.ADDTIME) as ADDTIME_DATE,
		m.ADDIP, 
		m.SHAREPERSON, 
		m.LASTLOGINTIME, 
		m.LASTLOGINIP, 
		m.USERIDMD5, 
		m.INVITERID, 
		m.AWARDMONEY, 
		m.ACCUMULATEPOINTS, 
		m.TYPE, 
		m.SOURCE, 
		m.GAINACCUMULATEPOINTS, 
		m.PROVINCE, 
		m.CITY, 
		m.AREA, 
		m.IS_EMPLOYEER, 
		m.IS_FINANCIAL_USER, 
		m.QQ, 
		m.WX_NO, 
		m.EMAIL_PASSWORD
	</sql>
	
  	<!-- 分页查询客户信息 -->
	<select id="getPageMemberVoList" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultMap="memberResultMap" >
		select <include refid="memberNewColumn"/>,RA.realName realName,MA.mobileNum mobileNum 
		from rocky_member m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		where 1 = 1
		<if test="username != null and username != ''">
			and m.USERNAME like concat('%',#{username},'%')
		</if>
		<if test="realName != null and realName != ''">
			and RA.REALNAME like concat('%',#{realName},'%')
		</if>
		<if test="status != null and status != ''">
			and m.STATUS = #{status}
		</if>
		order by m.id
  	</select>  
  	
  	<!-- 分页查询客户信息 -->
	<select id="getPageMemberVoCount" parameterType="com.cxdai.console.customer.information.vo.MemberCnd" resultType="java.lang.Integer" >
		select count(*)
		from rocky_member m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		where 1 = 1
		<if test="username != null and username != ''">
			and m.USERNAME like concat('%',#{username},'%')
		</if>
		<if test="realName != null and realName != ''">
			and RA.REALNAME like concat('%',#{realName},'%')
		</if>
		<if test="status != null and status != ''">
			and m.STATUS = #{status}
		</if>
		order by m.id
  	</select>
  	
  	
  	<!-- 根据客户id查询客户信息 -->
	<select id="queryMemberVoById" parameterType="java.lang.Integer" resultMap="memberResultMap" >
		select
		<include refid="memberColumn"/>,RA.realName realName,MA.mobileNum mobileNum 
		from rocky_member m
		left join rocky_realname_appro RA on m.id = RA.USER_ID and RA.ISPASSED = 1
		left join rocky_mobile_appro MA on m.id = MA.USER_ID and MA.PASSED = 1
		where 1= 1
		<if test="id != null and id != ''">
			and m.id = ${id}
		</if>
  	</select>
  	
  	
  		<select id="queryPasswordInfoById" parameterType="java.lang.Integer" resultType="com.cxdai.console.customer.information.vo.MemberVo" >
		 select 	
		    m.ID, 
			m.USERNAME, 
			m.STATUS, 
			m.ADDTIME, 
			m.IS_EMPLOYEER, 
			m.LOGPASSWORD,
			m.PAYPASSWORD,
			m.headimg,
			m.IS_CUSTODY as isCustody,
			m.E_TYPE as eType
			from
			rocky_member m
		 where id = #{userId}  
  	</select>
  	
</mapper>  