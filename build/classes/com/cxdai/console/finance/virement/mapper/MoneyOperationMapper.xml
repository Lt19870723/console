<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxdai.console.finance.virement.mapper.MoneyOperationMapper">
  <resultMap id="BaseResultMap" type="com.cxdai.console.finance.virement.entity.MoneyOperation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="OPERATION_CODE" jdbcType="VARCHAR" property="operationCode" />
    <result column="OPERATIONR_MONEY" jdbcType="DECIMAL" property="operationrMoney" />
    <result column="OUT_BANK_ACCOUNT_ID" jdbcType="INTEGER" property="outBankAccountId" />
    <result column="OUT_TYPE" jdbcType="INTEGER" property="outType" />
    <result column="PAYER_NAME" jdbcType="VARCHAR" property="payerName" />
    <result column="PAYER_BANK_ID" jdbcType="INTEGER" property="payerBankId" />
    <result column="PAYER_SUBBRANCH" jdbcType="VARCHAR" property="payerSubbranch" />
    <result column="PAYER_CARD_NO" jdbcType="VARCHAR" property="payerCardNo" />
    <result column="IN_BANK_ACCOUNT_ID" jdbcType="INTEGER" property="inBankAccountId" />
    <result column="IN_TYPE" jdbcType="INTEGER" property="inType" />
    <result column="PAYEE_NAME" jdbcType="VARCHAR" property="payeeName" />
    <result column="PAYEE_BANK_ID" jdbcType="INTEGER" property="payeeBankId" />
    <result column="PAYEE_SUBBRANCH" jdbcType="VARCHAR" property="payeeSubbranch" />
    <result column="PAYEE_CARD_NO" jdbcType="VARCHAR" property="payeeCardNo" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="OPERATION_TYPE" jdbcType="INTEGER" property="operationType" />
    <result column="BUSINESS_TIME" jdbcType="TIMESTAMP" property="businessTime" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="ADDUSER" jdbcType="INTEGER" property="adduser" />
    <result column="ADDTIME" jdbcType="TIMESTAMP" property="addtime" />
    <result column="ADDIP" jdbcType="VARCHAR" property="addip" />
    <result column="UPDATEUSER" jdbcType="INTEGER" property="updateuser" />
    <result column="UPDATETIME" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="UPDATEIP" jdbcType="VARCHAR" property="updateip" />
  </resultMap>
  
  
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
     update cw_money_operation set 
      STATUS = 4
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.cxdai.console.finance.virement.entity.MoneyOperation">
    insert into cw_money_operation (OPERATION_CODE, OPERATIONR_MONEY, 
      OUT_BANK_ACCOUNT_ID, OUT_TYPE, PAYER_NAME, 
      PAYER_BANK_ID, PAYER_SUBBRANCH, PAYER_CARD_NO, 
      IN_BANK_ACCOUNT_ID, IN_TYPE, PAYEE_NAME, 
      PAYEE_BANK_ID, PAYEE_SUBBRANCH, PAYEE_CARD_NO, 
      STATUS, OPERATION_TYPE, BUSINESS_TIME, 
      REMARK, ADDUSER, ADDTIME, 
      ADDIP, UPDATEUSER, UPDATETIME, 
      UPDATEIP)
    values (#{operationCode,jdbcType=VARCHAR}, #{operationrMoney,jdbcType=DECIMAL}, 
      #{outBankAccountId,jdbcType=INTEGER}, #{outType,jdbcType=INTEGER}, #{payerName,jdbcType=VARCHAR}, 
      #{payerBankId,jdbcType=INTEGER}, #{payerSubbranch,jdbcType=VARCHAR}, #{payerCardNo,jdbcType=VARCHAR}, 
      #{inBankAccountId,jdbcType=INTEGER}, #{inType,jdbcType=INTEGER}, #{payeeName,jdbcType=VARCHAR}, 
      #{payeeBankId,jdbcType=INTEGER}, #{payeeSubbranch,jdbcType=VARCHAR}, #{payeeCardNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{operationType,jdbcType=INTEGER}, #{businessTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{adduser,jdbcType=INTEGER}, now(), 
      #{addip,jdbcType=VARCHAR}, #{updateuser,jdbcType=INTEGER}, now(), 
      #{updateip,jdbcType=VARCHAR})
      <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">  
      	    SELECT LAST_INSERT_ID() AS ID    
   		 </selectKey>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cxdai.console.finance.virement.entity.MoneyOperation">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cw_money_operation
    set OPERATION_CODE = #{operationCode,jdbcType=VARCHAR},
      OPERATIONR_MONEY = #{operationrMoney,jdbcType=DECIMAL},
      OUT_BANK_ACCOUNT_ID = #{outBankAccountId,jdbcType=INTEGER},
      OUT_TYPE = #{outType,jdbcType=INTEGER},
      PAYER_NAME = #{payerName,jdbcType=VARCHAR},
      PAYER_BANK_ID = #{payerBankId,jdbcType=INTEGER},
      PAYER_SUBBRANCH = #{payerSubbranch,jdbcType=VARCHAR},
      PAYER_CARD_NO = #{payerCardNo,jdbcType=VARCHAR},
      IN_BANK_ACCOUNT_ID = #{inBankAccountId,jdbcType=INTEGER},
      IN_TYPE = #{inType,jdbcType=INTEGER},
      PAYEE_NAME = #{payeeName,jdbcType=VARCHAR},
      PAYEE_BANK_ID = #{payeeBankId,jdbcType=INTEGER},
      PAYEE_SUBBRANCH = #{payeeSubbranch,jdbcType=VARCHAR},
      PAYEE_CARD_NO = #{payeeCardNo,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      OPERATION_TYPE = #{operationType,jdbcType=INTEGER},
      BUSINESS_TIME = #{businessTime,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR},
      UPDATEUSER = #{updateuser,jdbcType=INTEGER},
      UPDATETIME = now(),
      UPDATEIP = #{updateip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, OPERATION_CODE, OPERATIONR_MONEY, OUT_BANK_ACCOUNT_ID, OUT_TYPE, PAYER_NAME, 
    PAYER_BANK_ID, PAYER_SUBBRANCH, PAYER_CARD_NO, IN_BANK_ACCOUNT_ID, IN_TYPE, PAYEE_NAME, 
    PAYEE_BANK_ID, PAYEE_SUBBRANCH, PAYEE_CARD_NO, STATUS, OPERATION_TYPE, BUSINESS_TIME, 
    REMARK, ADDUSER, ADDTIME, ADDIP, UPDATEUSER, UPDATETIME, UPDATEIP
    from cw_money_operation
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, OPERATION_CODE, OPERATIONR_MONEY, OUT_BANK_ACCOUNT_ID, OUT_TYPE, PAYER_NAME, 
    PAYER_BANK_ID, PAYER_SUBBRANCH, PAYER_CARD_NO, IN_BANK_ACCOUNT_ID, IN_TYPE, PAYEE_NAME, 
    PAYEE_BANK_ID, PAYEE_SUBBRANCH, PAYEE_CARD_NO, STATUS, OPERATION_TYPE, BUSINESS_TIME, 
    REMARK, ADDUSER, ADDTIME, ADDIP, UPDATEUSER, UPDATETIME, UPDATEIP
    from cw_money_operation
    where id = #{id,jdbcType=INTEGER} for update
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, OPERATION_CODE, OPERATIONR_MONEY, OUT_BANK_ACCOUNT_ID, OUT_TYPE, PAYER_NAME, 
    PAYER_BANK_ID, PAYER_SUBBRANCH, PAYER_CARD_NO, IN_BANK_ACCOUNT_ID, IN_TYPE, PAYEE_NAME, 
    PAYEE_BANK_ID, PAYEE_SUBBRANCH, PAYEE_CARD_NO, STATUS, OPERATION_TYPE, BUSINESS_TIME, 
    REMARK, ADDUSER, ADDTIME, ADDIP, UPDATEUSER, UPDATETIME, UPDATEIP
    from cw_money_operation
  </select>
  
  <sql id="Base_column_sql">
  	id, OPERATION_CODE, OPERATIONR_MONEY, OUT_BANK_ACCOUNT_ID, OUT_TYPE, PAYER_NAME, 
    PAYER_BANK_ID, PAYER_SUBBRANCH, PAYER_CARD_NO, IN_BANK_ACCOUNT_ID, IN_TYPE, PAYEE_NAME, 
    PAYEE_BANK_ID, PAYEE_SUBBRANCH, PAYEE_CARD_NO, STATUS, OPERATION_TYPE, BUSINESS_TIME, 
    REMARK, ADDUSER, ADDTIME, ADDIP, UPDATEUSER, UPDATETIME, UPDATEIP
  </sql>
  
  <sql id="moneyOperation_sql">
  	<where>
  		<if test="operator != null and operator != ''">
  			tsu.`NAME` LIKE CONCAT('%', #{operator}, '%')
  		</if>
  		<if test="status != null and status != ''">
  			AND cmo.`STATUS` = #{status}
  		</if>
  		<if test="operationCode != null and operationCode != ''">
  			AND cmo.`OPERATION_CODE` = #{operationCode}
  		</if>
  		<if test="adduser != null and adduser != ''">
  			AND cmo.`ADDUSER` = #{adduser}
  		</if>
  	</where>
  </sql>
  <resultMap type="com.cxdai.console.finance.virement.vo.MoneyOperationVo" id="moneyOperationMap" extends="BaseResultMap">
  	<result column="NAME" jdbcType="VARCHAR" property="operator" />
  	<result column="APPROVE_USER" jdbcType="VARCHAR" property="approvalUser" />
  	<result column="PAYEE_BANK_NAME" jdbcType="VARCHAR" property="payeeBankName" />
  	<result column="PAYER_BANK_NAME" jdbcType="VARCHAR" property="payerBankName" />
  </resultMap>
  <select id="queryListCountByCnd" parameterType="com.cxdai.console.finance.virement.vo.InterTransferCnd" resultType="int">
  	select count(*) from cw_money_operation cmo LEFT JOIN t_system_user tsu ON cmo.UPDATEUSER = tsu.ID <include refid="moneyOperation_sql" />
  </select>
  
  <select id="queryListByCnd" parameterType="com.cxdai.console.finance.virement.vo.InterTransferCnd" resultMap="moneyOperationMap">
  	SELECT cmo.*, tsu.`NAME` FROM cw_money_operation cmo LEFT JOIN t_system_user tsu ON cmo.ADDUSER = tsu.ID <include refid="moneyOperation_sql" />
  </select>
  
  
  
  
  <select id="searchListCountByCnd" parameterType="com.cxdai.console.finance.virement.vo.InterTransferCnd" resultType="int">
  	select count(*) from cw_money_operation cmo LEFT JOIN t_system_user tsu ON cmo.UPDATEUSER = tsu.ID 
  	where cmo.`STATUS`=3
  	<if test="operationCode != null and operationCode != ''">
  			AND cmo.`OPERATION_CODE` LIKE CONCAT('%', #{operationCode}, '%')
  	</if>
  </select>
  
  <select id="searchListByCnd" parameterType="com.cxdai.console.finance.virement.vo.InterTransferCnd" resultMap="moneyOperationMap">
  	SELECT cmo.*, tsu.`NAME` FROM cw_money_operation cmo LEFT JOIN t_system_user tsu ON cmo.UPDATEUSER = tsu.ID
  	where cmo.`STATUS`=3
  	<if test="operationCode != null and operationCode != ''">
  		AND cmo.`OPERATION_CODE` LIKE CONCAT('%', #{operationCode}, '%')
  	</if>
  </select>
  
  
  
  
  
  <update id="updateMoneyOperation" parameterType="com.cxdai.console.finance.virement.entity.AuditCnd" >
    update cw_money_operation
    <set >
      <if test="operationCode != null" >
        OPERATION_CODE = #{operationCode,jdbcType=VARCHAR},
      </if>
   
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
     
      <if test="userId != null" >
        UPDATEUSER = #{userId,jdbcType=INTEGER},
      </if>
        UPDATETIME = now(),
      <if test="ip != null" >
        UPDATEIP = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
 
 	
	<select id="findMoneyOperationDetail" resultMap="moneyOperationMap" parameterType="java.lang.Integer">
		SELECT cmo.*, tsu.`NAME`, tsu1.`NAME` AS APPROVE_USER, rc.`VALUE` AS PAYEE_BANK_NAME, rc1.`VALUE` AS PAYER_BANK_NAME
		FROM cw_money_operation cmo
		LEFT JOIN t_system_user tsu ON tsu.id = cmo.ADDUSER
		LEFT JOIN cw_money_operation_approve cmoa ON cmoa.TARGET_ID = cmo.ID 
		LEFT JOIN t_system_user tsu1 ON cmoa.ADDUSER = tsu1.ID
		LEFT JOIN rocky_configuration rc ON rc.ID = cmo.PAYEE_BANK_ID
		LEFT JOIN rocky_configuration rc1 ON rc1.ID = cmo.PAYER_BANK_ID
		WHERE cmo.id = #{id} ORDER BY cmoa.id DESC LIMIT 1
	</select> 
	
	<select id="findMoneyOperation" resultMap="moneyOperationMap" parameterType="java.lang.Integer">
		SELECT cmo.*, tsu.`NAME`, rc.`VALUE` AS PAYEE_BANK_NAME, rc1.`VALUE` AS PAYER_BANK_NAME
		FROM cw_money_operation cmo
		LEFT JOIN t_system_user tsu ON tsu.id = cmo.ADDUSER 
		LEFT JOIN rocky_configuration rc ON rc.ID = cmo.PAYEE_BANK_ID
		LEFT JOIN rocky_configuration rc1 ON rc1.ID = cmo.PAYER_BANK_ID
		WHERE cmo.id = #{id}
	</select>
	
	<select id="findMoneyOperationMap" resultType="map" parameterType="java.lang.Integer">
		SELECT
			cmo.OPERATION_CODE AS operationCode,
			DATE_FORMAT(cmo.BUSINESS_TIME, '%Y  年  %m  月  %d  日') AS businessTime,
			cmo.OPERATIONR_MONEY AS operationrMoney,
			CASE cmo.OUT_TYPE WHEN 1 THEN '现金' WHEN 2 THEN '银行转账' END AS outType,
			cmo.OUT_TYPE AS outType,
			cmo.PAYER_NAME AS payerName,
			cmo.PAYER_SUBBRANCH AS payerSubbranch,
			cmo.PAYER_CARD_NO AS payerCardNo,
			CASE cmo.IN_TYPE WHEN 1 THEN '现金' WHEN 2 THEN '银行转账' END AS inType,
			cmo.PAYEE_NAME AS payeeName,
			cmo.PAYEE_SUBBRANCH AS payeeSubbranch,
			cmo.PAYEE_CARD_NO AS payeeCardNo,
			cmo.REMARK AS remark,
			tsu.`NAME` AS operator,
			rc.`VALUE` AS payeeBankName,
			rc1.`VALUE` AS payerBankName,
			(SELECT tsu2.`NAME` FROM cw_money_operation_approve cmoa LEFT JOIN t_system_user tsu2 ON cmoa.ADDUSER = tsu2.ID WHERE cmoa.TARGET_ID = #{id} ORDER BY cmoa.id DESC LIMIT 1) AS approvalUser
		FROM
			cw_money_operation cmo
		LEFT JOIN t_system_user tsu ON tsu.id = cmo.ADDUSER
		LEFT JOIN rocky_configuration rc ON rc.ID = cmo.PAYEE_BANK_ID
		LEFT JOIN rocky_configuration rc1 ON rc1.ID = cmo.PAYER_BANK_ID
		WHERE
			cmo.id = #{id}
	</select>
</mapper>