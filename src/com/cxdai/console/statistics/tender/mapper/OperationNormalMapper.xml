<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper
	namespace="com.cxdai.console.statistics.tender.mapper.OperationNormalMapper">

	<!-- 查询最新的待收总额 -->
	<select id="queryCollectionTotal" resultType="java.math.BigDecimal">
		SELECT
		IFNULL(SUM(collection),0) FROM rocky_account
	</select>

	<!-- 根据条件查询所有满标的所有标种成交总额 -->
	<select id="queryBorrowSuccessAccountTotal"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.math.BigDecimal">
  	<![CDATA[
        SELECT IFNULL(SUM(ACCOUNT),0) FROM ROCKY_BORROW  
        WHERE 1=1  
	  	AND STATUS IN(4,5,42)  
		and SUCCESS_TIME >= #{beginTimeStr}
		and SUCCESS_TIME <= #{endTimeStr}
	]]>
	</select>

	<!-- 根据条件查询累计投资人数 -->
	<select id="queryInvestPersonsTotal"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
	<![CDATA[
		SELECT IFNULL(COUNT(DISTINCT(t.user_id)),0) 
		FROM rocky_borrow b,rocky_b_tenderrecord t
		WHERE 1=1
		AND b.ID=t.BORROW_ID
		AND b.STATUS IN(4,5,42)
		and b.SUCCESS_TIME >= #{beginTimeStr}
		and b.SUCCESS_TIME <= #{endTimeStr}
		and t.PARENT_ID IS NULL
		AND t.STATUS != -1
	]]>
	</select>

	<!-- 查询成交的借款标 -->
	<select id="querySuccessAccountForTenderType"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.BorrowDataInfoVo">
	<![CDATA[
		 SELECT t.TENDER_TYPE AS tenderType,IFNULL(SUM(t.ACCOUNT),0) AS account
		 FROM rocky_b_tenderrecord t,rocky_borrow b
		 WHERE t.BORROW_ID = b.ID
		 AND b.STATUS IN(4,5,42)
		 AND b.SUCCESS_TIME >= #{beginTimeStr}
		 AND b.SUCCESS_TIME <= #{endTimeStr}
		 AND t.PARENT_ID IS NULL
		 AND t.STATUS != -1
		 GROUP BY t.TENDER_TYPE
	]]>
	</select>

	<!-- 新注册用户充值总额(在查询时间段内注册的投资用户必且在查询时间段内充值成功的总额) -->
	<select id="queryTopupTotalForNewRegister"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.math.BigDecimal">
	<![CDATA[
        SELECT  IFNULL(SUM(r.MONEY),0)  
        FROM rocky_rechargerecord r,rocky_member m  
        WHERE r.STATUS = 1 
        AND r.USER_ID = m.id 
		AND m.IS_FINANCIAL_USER = 1	
		and m.ADDTIME >= #{beginTimeStr}
		and m.ADDTIME <= #{endTimeStr}
	    and r.VERIFY_TIME2 >= #{beginTimeStr}
		and r.VERIFY_TIME2 <= #{endTimeStr}  
	]]>
	</select>

	<!-- 新注册用户提现总额(在查询时间段内注册的投资用户必且在查询时间段内提现成功的总额) -->
	<select id="queryWithDrawTotalForNewRegister"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.math.BigDecimal">
	<![CDATA[
		SELECT IFNULL(SUM(c.TOTAL),0)  
		FROM rocky_cashrecord c,rocky_member m
		WHERE c.STATUS = 2
        AND c.USER_ID = m.id 
		AND m.IS_FINANCIAL_USER = 1	
		and m.ADDTIME >= #{beginTimeStr}
		and m.ADDTIME <= #{endTimeStr}		   	  
	 	and c.VERIFY_TIME2 >= #{beginTimeStr}
 		and c.VERIFY_TIME2 <= #{endTimeStr}		
	]]>
	</select>

	<!-- 新用户投资总额(在查询时间段内注册的投资用户必且在查询时间段内满标的投标总额) -->
	<select id="queryTenderTotalForNewRegister"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.math.BigDecimal">
	<![CDATA[
		SELECT IFNULL(SUM(t.ACCOUNT),0)  
		FROM rocky_b_tenderrecord t,rocky_member m,rocky_borrow b
		WHERE 1=1
		AND t.USER_ID = m.ID		
		AND t.BORROW_ID = b.ID
		AND t.PARENT_ID IS NULL
		AND t.STATUS != -1		
		AND m.IS_FINANCIAL_USER = 1		    
		AND m.ADDTIME >= #{beginTimeStr}
		AND m.ADDTIME <= #{endTimeStr}		
		AND b.STATUS IN (4,5,42)		
	 	AND b.SUCCESS_TIME >= #{beginTimeStr}
 		AND b.SUCCESS_TIME <= #{endTimeStr}	
	]]>
	</select>

	<!-- 流失投资者人数：（之前有充值并投标超过100【包含100元】，现资产总额小于100） 在某个时间范围内的总计 -->
	<select id="queryLosePersonsTotal"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
		SELECT
		CASE
		WHEN DATE(#{endTime,jdbcType=TIMESTAMP})=CURRENT_DATE() THEN (
		SELECT IFNULL(COUNT(DISTINCT a.user_id),0) FROM rocky_account
		a,rocky_b_tenderrecord t
		WHERE a.total &lt;100
		AND a.user_id = t.user_id
		AND t.ACCOUNT&gt;=100
		)
		ELSE (
		SELECT IFNULL(COUNT(DISTINCT a.user_id),0) FROM
		(
		SELECT A.USER_ID
		FROM rocky_account_day_log a
		WHERE a.total &lt; 100
		AND a.ADDTIME &gt;= DATE(#{endTime,jdbcType=TIMESTAMP}) and a.ADDTIME
		&lt; DATE_ADD(DATE(#{endTime,jdbcType=TIMESTAMP}),INTERVAL 1 DAY)
		) A,rocky_b_tenderrecord t
		WHERE 1=1
		AND a.user_id = t.user_id
		AND t.ACCOUNT&gt;=100
		AND t.ADDTIME &lt;= #{endTimeStr,jdbcType=VARCHAR}
		)
		END
		FROM DUAL
	</select>

	<!-- 推荐人数量：（原始推荐人数量） -->
	<select id="queryRecommendInfo"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.RecommendInfoVo">
	<![CDATA[
		SELECT 
		    COUNT(DISTINCT rm.INVITERID)   AS referrerPersons, 
		    COUNT(rm.ID)                   AS recommendedPersons
		FROM rocky_member rm,(
		 	SELECT 
			    DISTINCT rm.ID
			FROM rocky_member rm,(	
			     SELECT 
				     DISTINCT m.INVITERID
			     FROM rocky_member m 
			     WHERE 1=1
			     AND m.INVITERID IS NOT NULL
			) t
			WHERE rm.id = t.INVITERID
			AND rm.IS_FINANCIAL_USER = 1
		) temp
		WHERE 1=1
		AND rm.IS_FINANCIAL_USER = 1
		AND rm.INVITERID = temp.ID	
		AND rm.ADDTIME >= #{beginTimeStr}
		AND rm.ADDTIME <= #{endTimeStr}		
	]]>
	</select>

	<!-- 被推荐人充值额 -->
	<select id="queryTopupTotalForRecommended"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.math.BigDecimal">
	<![CDATA[
        SELECT  IFNULL(SUM(r.MONEY),0)  
        FROM rocky_rechargerecord r,rocky_member m,(
		 	SELECT 
			    DISTINCT rm.ID
			FROM rocky_member rm,(	
			     SELECT 
				DISTINCT m.INVITERID
			     FROM rocky_member m 
			     WHERE 1=1
			     AND m.INVITERID IS NOT NULL
			) t
			WHERE rm.id = t.INVITERID
			AND rm.IS_FINANCIAL_USER = 1
		) temp  
        WHERE r.STATUS = 1 
        AND r.USER_ID = m.id 
		AND m.INVITERID IS NOT NULL
		AND m.IS_FINANCIAL_USER = 1
		AND m.INVITERID = temp.ID			
		and m.ADDTIME >= #{beginTimeStr}
		and m.ADDTIME <= #{endTimeStr}
	    and r.VERIFY_TIME2 >= #{beginTimeStr}
		and r.VERIFY_TIME2 <= #{endTimeStr} 		
	]]>
	</select>

	<!-- 被推荐人投资总额 -->
	<select id="queryTenderTotalForRecommended"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.math.BigDecimal">
	<![CDATA[
		SELECT IFNULL(SUM(t.ACCOUNT),0)  
		FROM rocky_b_tenderrecord t,rocky_member m,rocky_borrow b,(
		 	SELECT 
			    DISTINCT rm.ID
			FROM rocky_member rm,(	
			     SELECT 
				DISTINCT m.INVITERID
			     FROM rocky_member m 
			     WHERE 1=1
			     AND m.INVITERID IS NOT NULL
			) t
			WHERE rm.id = t.INVITERID
			AND rm.IS_FINANCIAL_USER = 1
		) temp
		WHERE 1=1
		AND t.USER_ID = m.ID		
		AND t.BORROW_ID = b.ID
		AND t.PARENT_ID IS NULL
		AND t.STATUS != -1		
		AND m.INVITERID IS NOT NULL
		AND m.IS_FINANCIAL_USER = 1		
		AND m.INVITERID = temp.ID		    
		AND m.ADDTIME >= #{beginTimeStr}
		AND m.ADDTIME <= #{endTimeStr}		
		AND b.STATUS IN (4,5,42)		
	 	AND b.SUCCESS_TIME >= #{beginTimeStr}
 		AND b.SUCCESS_TIME <= #{endTimeStr}	
	]]>
	</select>

	<!-- 流失被推荐投资者人数：（之前有充值并投标超过100【包含100元】，现资产总额小于100） 在某个时间范围内的总计 -->
	<select id="queryLosePersonsForRecommended"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
	<![CDATA[
		SELECT 
		  CASE 
		     WHEN DATE(FROM_UNIXTIME(#{endTimeStr},'%Y-%m-%d'))=CURRENT_DATE() THEN (
				SELECT IFNULL(COUNT(DISTINCT a.user_id),0) FROM rocky_account a,rocky_b_tenderrecord t,rocky_member m,(
				 	SELECT 
					    DISTINCT rm.ID
					FROM rocky_member rm,(	
					     SELECT 
						DISTINCT m.INVITERID
					     FROM rocky_member m 
					     WHERE 1=1
					     AND m.INVITERID IS NOT NULL
					) t
					WHERE rm.id = t.INVITERID
					AND rm.IS_FINANCIAL_USER = 1
				) temp 
				WHERE a.total<100 
				AND a.user_id = t.user_id
				AND a.user_id = m.id
				AND t.ACCOUNT>=100 		
				AND m.INVITERID IS NOT NULL
				AND m.IS_FINANCIAL_USER = 1
				AND m.INVITERID = temp.ID
		     )
		  ELSE (    	          
				SELECT IFNULL(COUNT(DISTINCT a.user_id),0) FROM 
				(			 
				    SELECT A.USER_ID   
				    FROM rocky_account_day_log a,rocky_member m,(
					 	SELECT 
						    DISTINCT rm.ID
						FROM rocky_member rm,(	
						     SELECT 
							DISTINCT m.INVITERID
						     FROM rocky_member m 
						     WHERE 1=1
						     AND m.INVITERID IS NOT NULL
						) t
						WHERE rm.id = t.INVITERID
						AND rm.IS_FINANCIAL_USER = 1
					) temp
				    WHERE a.total < 100 
				    AND a.ADDTIME LIKE CONCAT(FROM_UNIXTIME(#{endTimeStr},'%Y-%m-%d'),'%')
				    AND a.user_id = m.id
					AND m.INVITERID IS NOT NULL
					AND m.IS_FINANCIAL_USER = 1	
					AND m.INVITERID = temp.ID			    
				) A,rocky_b_tenderrecord t 
				WHERE 1=1
				AND a.user_id = t.user_id 
				AND t.ACCOUNT>=100 
				AND t.ADDTIME <= #{endTimeStr}  		
		    )
		  END 
		FROM DUAL		
	]]>
	</select>

	<!-- 净值标统计 -->
	<select id="queryPushNetValueCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
		select COUNT(ID) as publishCount from rocky_borrow where BORROWTYPE=3
		<if test="beginTime != null">
			and ADDTIME &gt;= #{beginTime}
		</if>
		<if test="endTime != null">
			AND ADDTIME &lt; date_add(#{endTime}, INTERVAL 1 day)
		</if>
	</select>
	<select id="queryOKNetValueBorrowCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.NetValueBorrowCountVo">
		select COUNT(id) as netValueCount,SUM(ifnull(ACCOUNT,0))
		as
		netValueAccount from rocky_borrow where BORROWTYPE=3
		and `STATUS`
		in(4,5,42)
		<if test="beginTime != null">
			and success_time &gt;= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and success_time &lt; UNIX_TIMESTAMP (#{endTime})+86400;
		</if>
	</select>
	<select id="queryRecommendCountList"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.RecommendCountVo">
		select source
		,(select value from rocky_configuration s where type=1101
		and `NAME`= source
		LIMIT 1) as sourceName
		,count(1) registNum
		,COUNT(namepass) realNameNum
		,COUNT(vippass) vipNum
		,COUNT(recharge)
		rechargeNum
		,SUM(rechargeMoney) rechargeMoney
		,COUNT(invest)
		investNum
		,SUM(investMoney) investMoney
		,COUNT(lost) lostNum, b.end_time
		AS sourceEndTime,b.remark
		,(select START_TIME from t_member_source
		where source_no=source and `STATUS`=1 order by id desc limit 1)
		sourceFrom
		from (
		select
		a.id,a.source,b.ISPASSED namepass,e.passed
		vippass,r.recharge,r.rechargeMoney,v3.invest,v.investMoney,ra.lost from
		(
		select m.id,m.source FROM ROCKY_MEMBER m where 1=1 and `STATUS`=0
		<if test="beginTime != null">
			and ADDTIME >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and ADDTIME &lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		<if test="source != null and source != ''">
			and source =#{source}
		</if>
		)a LEFT JOIN
		ROCKY_REALNAME_APPRO b
		ON a.ID = b.USER_ID and ISPASSED=1
		<if test="beginTime != null">
			and b.APPROVETIME >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and b.APPROVETIME &lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>

		LEFT JOIN ROCKY_VIP_APPRO e
		ON a.ID = e.USER_ID and PASSED=1
		<if test="beginTime != null">
			and e.APPROVETIME >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and e.APPROVETIME &lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		LEFT JOIN (
		select USER_ID,1 as recharge,SUM(MONEY)as rechargeMoney from
		rocky_rechargerecord
		where `STATUS`=1
		<if test="beginTime != null">
			AND VERIFY_TIME2 >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and VERIFY_TIME2 &lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		GROUP BY USER_ID
		) r
		on a.id= r.USER_ID
		LEFT JOIN (
		select USER_ID,invest,SUM(investMoney) investMoney from (
		select rbt.USER_ID,1 as
		invest,sum(rbt.ACCOUNT)as investMoney from
		rocky_b_tenderrecord rbt LEFT
		JOIN rocky_borrow rb
		on rbt.BORROW_ID=rb.ID where rb.`STATUS`in(4,5,42)
		<if test="beginTime != null">
			and rbt.ADDTIME >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and rbt.ADDTIME&lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		and rbt.`STATUS` != -1 and rbt.PARENT_ID IS NULL
		GROUP BY USER_ID
		UNION ALL
		select tftd.USER_ID,1 as invest,sum(tftd.ACCOUNT)as investMoney from
		t_fix_tender_detail tftd
		LEFT JOIN t_fix_borrow tfb on tftd.FIX_BORROW_ID=tfb.ID
		where tftd.`STATUS`in(1,3)
		<if test="beginTime != null">
			and UNIX_TIMESTAMP(tftd.ADDTIME) >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and UNIX_TIMESTAMP(tftd.ADDTIME) &lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		GROUP BY USER_ID
		) borAndFix group by USER_ID
		) v
		on a.id= v.USER_ID

		<!-- 取首投的人数  start-->
		LEFT JOIN (
		select 1 as invest, t3.user_id,t3.addtime from (
		select * from (
		select * from (
		select rbt.USER_ID,rbt.addtime as addtime
		from rocky_b_tenderrecord rbt LEFT JOIN rocky_borrow rb
		on rbt.BORROW_ID=rb.ID where rb.`STATUS`in(4,5,42)
		and rbt.`STATUS` != -1 and rbt.PARENT_ID IS NULL
		UNION ALL
		select tftd.USER_ID,UNIX_TIMESTAMP(tftd.addtime) from t_fix_tender_detail tftd
		LEFT JOIN t_fix_borrow tfb on tftd.FIX_BORROW_ID=tfb.ID
		where tftd.`STATUS`in(1,3)
		) t order by addtime asc) t2
		group by t2.user_id
		) t3 where
		1=1
		<if test="beginTime != null">
			and t3.addtime >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and t3.addtime &lt; UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		) v3
		on a.id= v3.USER_ID
		<!-- 取首投的人数  end-->

		LEFT JOIN(
		<if
			test="endTime == null or endTime>= new  java.text.SimpleDateFormat('yyyy-MM-dd').parse(new  java.text.SimpleDateFormat('yyyy-MM-dd').format(new java.util.Date()))">
			select DISTINCT a.USER_ID,1 as lost from (SELECT USER_ID
			FROM
			rocky_account
			WHERE total &lt; 100)a,rocky_b_tenderrecord t
			where
			a.USER_ID=t.user_id AND t.ACCOUNT>=100
			<if test="endTime != null">
				AND t.ADDTIME &lt; UNIX_TIMESTAMP(#{endTime})+86400
			</if>
		</if>
		<if
			test="endTime != null and endTime &lt; new  java.text.SimpleDateFormat('yyyy-MM-dd').parse(new  java.text.SimpleDateFormat('yyyy-MM-dd').format(new java.util.Date()))">
			select DISTINCT a.USER_ID,1 as lost from (SELECT USER_ID FROM
			rocky_account_day_log WHERE total &lt; 100
			AND ADDTIME &gt;=
			DATE(#{endTime}) AND ADDTIME &lt;DATE_ADD(DATE(#{endTime}),INTERVAL 1
			DAY)
			)a,rocky_b_tenderrecord
			t
			where a.USER_ID=t.user_id AND t.ACCOUNT>=100 AND t.ADDTIME &lt;
			UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		)ra on a.id=ra.USER_ID
		) k
		left join (select * from t_member_source where id in (select max(id) from
		t_member_source where status=1 GROUP By source_no)) b on
		k.SOURCE=b.source_no
		GROUP BY SOURCE order by registNum desc
	</select>
	
	<select id="queryfirstInfoCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.FirstInfoCountVo">
		select * from (
		select COUNT(1)as publishNum,SUM(REAL_ACCOUNT)as publishMoney from
		t_first_borrow
		where `STATUS` in(3,5)
		<if test="beginTime != null">
			AND PUBLISH_TIME >= #{beginTime}
		</if>
		<if test="endTime != null">
			and PUBLISH_TIME&lt; date_add(#{endTime},INTERVAL 1 day)
		</if>
		)a,(
		select COUNT(USER_ID) as joinNum,COUNT(DISTINCT USER_ID) as joinPeopleNum
		from
		t_first_tender_detail
		where `STATUS`=1
		<if test="beginTime != null">
			and ADDTIME>=#{beginTime}
		</if>
		<if test="endTime != null">
			and ADDTIME&lt; date_add(#{endTime},INTERVAL 1 day)
		</if>
		)b
	</select>
	<select id="querymoreInvestCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.MoreInvestCountVo">
		select times,COUNT(1) num from (
		select
		USER_ID,COUNT(DISTINCT(borrow_id))as times from
		rocky_b_tenderrecord
		where BORROW_ID in(
		select id from rocky_borrow
		where `STATUS`in(4,5,42)
		<if test="beginTime != null">
			and SUCCESS_TIME >= UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and SUCCESS_TIME &lt;UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		)
		AND PARENT_ID IS NULL
		AND status !=-1
		GROUP BY user_id
		)as a
		where 1=1
		<if test="beginTimes != null and beginTimes != ''">
			and times >= #{beginTimes}
		</if>
		<if test="endTimes != null and endTimes != ''">
			and times &lt;=#{endTimes}
		</if>
		GROUP BY times
	</select>
	<select id="queryNewInvestCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.NewInvestCountVo">
		select COUNT(1) num,sum(investMoney) totalMoney from(
		select USER_ID,SUM(ACCOUNT)investMoney from rocky_b_tenderrecord
		where `STATUS` in(1,2)
		<if test="beginTime != null">
			and ADDTIME>=UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and ADDTIME &lt;UNIX_TIMESTAMP(#{endTime})+86400
		</if>
		and PARENT_ID IS NULL
		<if test="beginTime != null">
			and USER_ID not in(select DISTINCT USER_ID from rocky_b_tenderrecord
			where `STATUS` in(1,2)and ADDTIME&lt;UNIX_TIMESTAMP(#{beginTime}) and
			PARENT_ID IS NULL
			)
		</if>
		GROUP BY USER_ID HAVING investMoney>=0
		<if test="investMoneyBegin != null and investMoneyBegin != ''">
			and investMoney>=#{investMoneyBegin}
		</if>
		<if test="investMoneyEnd != null and investMoneyEnd != ''">
			and investMoney&lt;=#{investMoneyEnd}
		</if>
		)a

	</select>
	<!-- 条件：平台来源 -->
	<!-- <select id="queryMonthlyInvestCount" parameterType="com.cxdai.console.opration.vo.OperationCnd" 
		resultType="java.lang.Integer"> select count(*) from ( select * from( select 
		a.USER_ID from rocky_b_tenderrecord a join rocky_borrow b on a.BORROW_ID=b.ID 
		and b.`STATUS`in(4,5,42) <if test="platForm!=null and platForm!=''"> and 
		a.PLATFORM=#{platForm} </if> <if test="userName!=null and userName!=''"> 
		and a.user_id=(select id from rocky_member where username=#{userName} or 
		email=#{userName}) </if> and b.SUCCESS_TIME>= #{beginTimeStr} and b.SUCCESS_TIME&lt;#{endTimeStr} 
		)c GROUP BY USER_ID )e </select> select id="queryMonthlyInvest" parameterType="com.cxdai.console.opration.vo.OperationCnd" 
		resultType="com.cxdai.console.opration.vo.MonthlyInvestVo"> select c.USER_ID 
		userId,(select username from rocky_member where id=c.USER_ID) userName,mon 
		monthStr,SUM(ACCOUNT) money from( select a.USER_ID, a.ACCOUNT,substr(FROM_UNIXTIME(SUCCESS_TIME),1,7)as 
		mon from rocky_b_tenderrecord a join rocky_borrow b on a.BORROW_ID=b.ID and 
		b.`STATUS`in(4,5,42) <if test="platForm!=null and platForm!=''"> and a.PLATFORM=#{platForm} 
		</if> <if test="userName!=null and userName!=''"> and a.user_id=(select id 
		from rocky_member where username=#{userName} or email=#{userName}) </if> 
		and b.SUCCESS_TIME>= #{beginTimeStr} and b.SUCCESS_TIME&lt;#{endTimeStr} 
		and a.user_id in (select h.user_id from ( select DISTINCT d.USER_ID from 
		rocky_b_tenderrecord d join rocky_borrow e on d.BORROW_ID=e.ID and e.`STATUS`in(4,5,42) 
		<if test="platForm!=null and platForm!=''"> and d.PLATFORM=#{platForm} </if> 
		<if test="userName!=null and userName!=''"> and d.user_id=(select id from 
		rocky_member where username=#{userName} or email=#{userName}) </if> and e.SUCCESS_TIME>= 
		#{beginTimeStr} and e.SUCCESS_TIME&lt;#{endTimeStr} ORDER BY d.user_id limit 
		#{_limit},#{_offset})h) )c GROUP BY c.USER_ID,c.mon ORDER BY c.USER_ID,c.mon 
		</select> -->
	<!-- 条件：source来源 -->
	<select id="queryMonthlyInvestCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
		select count(*) from (
		select DISTINCT d.USER_ID
		from rocky_b_tenderrecord d join rocky_borrow e
		on d.BORROW_ID=e.ID and e.`STATUS`in(4,5,42)
		<if
			test="(source!=null and source!='') or (userName!=null and userName!='')">
			and d.user_id in (select id from rocky_member where
			IS_FINANCIAL_USER=1
			<if test="source!=null and source!=''">
				and source=#{source}
			</if>
			<if test="userName!=null and userName!=''">
				and username=#{userName} or email=#{userName}
			</if>
			)
		</if>
		and e.SUCCESS_TIME>= #{beginTimeStr} and
		e.SUCCESS_TIME&lt;#{endTimeStr}) k
	</select>
	<select id="queryMonthlyInvest"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.MonthlyInvestVo">
		select c.USER_ID userId,(select username from rocky_member where
		id=c.USER_ID) userName,mon monthStr,SUM(ACCOUNT) money from(
		select
		a.USER_ID, a.ACCOUNT,substr(FROM_UNIXTIME(SUCCESS_TIME),1,7)as mon
		from rocky_b_tenderrecord a join rocky_borrow b
		on a.BORROW_ID=b.ID and
		b.`STATUS`in(4,5,42) and a.PARENT_ID is null and a.status != -1
		and
		b.SUCCESS_TIME>= #{beginTimeStr} and
		b.SUCCESS_TIME&lt;#{endTimeStr}
		and a.user_id in (select h.user_id from
		(
		select DISTINCT d.USER_ID
		from rocky_b_tenderrecord d join rocky_borrow e
		on d.BORROW_ID=e.ID and e.`STATUS`in(4,5,42) and d.PARENT_ID is null and
		d.status != -1
		<if
			test="(source!=null and source!='') or (userName!=null and userName!='')">
			and d.user_id in (select id from rocky_member where
			IS_FINANCIAL_USER=1
			<if test="source!=null and source!=''">
				and source=#{source}
			</if>
			<if test="userName!=null and userName!=''">
				and username=#{userName} or email=#{userName}
			</if>
			)
		</if>
		and e.SUCCESS_TIME>= #{beginTimeStr} and
		e.SUCCESS_TIME&lt;#{endTimeStr}
		ORDER BY d.user_id limit #{_limit},#{_offset})h)
		)c GROUP BY c.USER_ID,c.mon ORDER BY c.USER_ID,c.mon
	</select>

	<select id="queryRegisterFormDetailListAll"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.RegisterFormDetailVo">
		select DISTINCT rm.username as username,
		CASE WHEN rm.`STATUS`=-1 THEN
		'账户注销'
		WHEN rm.`STATUS`=-2 THEN '待审核'
		WHEN rm.`STATUS`=-3 THEN '审核不通过'
		WHEN rm.`STATUS`=0 THEN '正常' END as status,
		rra.REALNAME as realname,
		rm.email as email,
		rma.MOBILENUM as mobile,
		FROM_UNIXTIME(rm.ADDTIME,'%Y-%m-%d %H:%i:%S') as registerTime,
		rcf.`VALUE` as source,
		zcze.TOTAL as total,
		CASE WHEN rra.ISPASSED=1
		THEN '是' ELSE '否' END as realPassed,
		CASE WHEN rma.PASSED=1 THEN '是'
		ELSE '否' END as mobilePassed,
		CASE WHEN rea.CHECKED=1 THEN '是' ELSE '否'
		END as emailPassed,
		CASE WHEN rva.PASSED=1 THEN '是' ELSE '否' END as
		vipPassed,
		CASE WHEN rr.MONEY>0 THEN '是' ELSE '否' END as
		rechargePassed,
		rr.MONEY as rechargeMoney,
		CASE WHEN rbt.ACCOUNT>0 THEN '是' ELSE '否' END as
		tenderPassed,
		rbt.ACCOUNT as tenderMoney,
		CASE WHEN rc.TOTAL>0 THEN '是' ELSE '否' END as
		cashPassed,
		rc.TOTAL as cashMoney,
		rr.MONEY-rc.TOTAL as diffMoney
		from rocky_member rm
		LEFT
		JOIN rocky_realname_appro rra on rm.id=rra.user_id
		LEFT JOIN
		rocky_mobile_appro rma on rm.id=rma.user_id
		LEFT JOIN rocky_email_appro
		rea on rm.id=rea.user_id
		LEFT JOIN rocky_vip_appro rva on
		rm.id=rva.user_id
		LEFT JOIN rocky_rechargerecord rr on rm.id=rr.user_id
		LEFT JOIN rocky_b_tenderrecord rbt on rm.id=rbt.user_id
		LEFT JOIN
		rocky_cashrecord rc on rm.id=rc.user_id
		LEFT JOIN rocky_configuration
		rcf on rm.SOURCE=rcf.`NAME` and rcf.type=1101
		LEFT JOIN (
		select
		USER_ID, sum(TOTAL) as TOTAL from (
		select USER_ID, TOTAL from rocky_account
		union all
		select USER_ID, TOTAL from t_cur_account
		union all
		SELECT USER_ID, ACCOUNT from t_fix_tender_detail WHERE `STATUS` = 0
		union all
		SELECT USER_ID, REPAY_ACCOUNT from t_fix_collectionrecord WHERE `STATUS` = 0
		) t group by USER_ID
		) zcze on rm.id=zcze.user_id
		where 1=1
		<if test="source != null and source != ''">
			and rm.SOURCE = #{source}
		</if>
		<if test="beginTime != null">
			and FROM_UNIXTIME(rm.ADDTIME) >= #{beginTime}
		</if>
		<if test="endTime != null">
			and FROM_UNIXTIME(rm.ADDTIME) &lt; #{endTime}
		</if>
		order by rm.ADDTIME
	</select>

	<select id="queryRegisterFormDetailListCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
		select count(*) from (
		select DISTINCT rm.username as username,
		CASE
		WHEN rm.`STATUS`=-1 THEN '账户注销'
		WHEN rm.`STATUS`=-2 THEN '待审核'
		WHEN
		rm.`STATUS`=-3 THEN '审核不通过'
		WHEN rm.`STATUS`=0 THEN '正常' END as status,
		rra.REALNAME as realname,
		rm.email as email,
		rma.MOBILENUM as mobile,
		FROM_UNIXTIME(rm.ADDTIME,'%Y-%m-%d %H:%i:%S') as registerTime,
		rcf.`VALUE` as source,
		zcze.TOTAL as total,
		CASE WHEN rra.ISPASSED=1
		THEN '是' ELSE '否' END as realPassed,
		CASE WHEN rma.PASSED=1 THEN '是'
		ELSE '否' END as mobilePassed,
		CASE WHEN rea.CHECKED=1 THEN '是' ELSE '否'
		END as emailPassed,
		CASE WHEN rva.PASSED=1 THEN '是' ELSE '否' END as
		vipPassed,
		CASE WHEN rr.MONEY>0 THEN '是' ELSE '否' END as
		rechargePassed,
		rr.MONEY as rechargeMoney,
		CASE WHEN rbt.ACCOUNT>0 THEN '是' ELSE '否' END as
		tenderPassed,
		rbt.ACCOUNT as tenderMoney,
		CASE WHEN rc.TOTAL>0 THEN '是' ELSE '否' END as
		cashPassed,
		rc.TOTAL as cashMoney,
		rr.MONEY-rc.TOTAL as diffMoney
		from rocky_member rm
		LEFT
		JOIN rocky_realname_appro rra on rm.id=rra.user_id
		LEFT JOIN
		rocky_mobile_appro rma on rm.id=rma.user_id
		LEFT JOIN rocky_email_appro
		rea on rm.id=rea.user_id
		LEFT JOIN rocky_vip_appro rva on
		rm.id=rva.user_id
		LEFT JOIN rocky_rechargerecord rr on rm.id=rr.user_id
		LEFT JOIN rocky_b_tenderrecord rbt on rm.id=rbt.user_id
		LEFT JOIN
		rocky_cashrecord rc on rm.id=rc.user_id
		LEFT JOIN rocky_configuration
		rcf on rm.SOURCE=rcf.`NAME` and rcf.type=1101
		LEFT JOIN (
		select
		USER_ID, sum(TOTAL) as TOTAL from (
		select USER_ID, TOTAL from rocky_account
		union all
		select USER_ID, TOTAL from t_cur_account
		union all
		SELECT USER_ID, ACCOUNT from t_fix_tender_detail WHERE `STATUS` = 0
		union all
		SELECT USER_ID, REPAY_ACCOUNT from t_fix_collectionrecord WHERE `STATUS` = 0
		) t group by USER_ID
		) zcze on rm.id=zcze.user_id
		where 1=1
		<if test="source != null and source != ''">
			and rm.SOURCE = #{source}
		</if>
		<if test="beginTime != null">
			and FROM_UNIXTIME(rm.ADDTIME) >= #{beginTime}
		</if>
		<if test="endTime != null">
			and FROM_UNIXTIME(rm.ADDTIME) &lt; #{endTime}
		</if>
		order by rm.ADDTIME
		) temp
	</select>

	<select id="queryRegisterFormDetailList"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.RegisterFormDetailVo">
		select DISTINCT rm.username as username,
		CASE WHEN rm.`STATUS`=-1 THEN
		'账户注销'
		WHEN rm.`STATUS`=-2 THEN '待审核'
		WHEN rm.`STATUS`=-3 THEN '审核不通过'
		WHEN rm.`STATUS`=0 THEN '正常' END as status,
		rra.REALNAME as realname,
		rm.email as email,
		rma.MOBILENUM as mobile,
		FROM_UNIXTIME(rm.ADDTIME,'%Y-%m-%d %H:%i:%S') as registerTime,
		rcf.`VALUE` as source,
		zcze.TOTAL as total,
		CASE WHEN rra.ISPASSED=1
		THEN '是' ELSE '否' END as realPassed,
		CASE WHEN rma.PASSED=1 THEN '是'
		ELSE '否' END as mobilePassed,
		CASE WHEN rea.CHECKED=1 THEN '是' ELSE '否'
		END as emailPassed,
		CASE WHEN rva.PASSED=1 THEN '是' ELSE '否' END as
		vipPassed,
		CASE WHEN rr.MONEY>0 THEN '是' ELSE '否' END as
		rechargePassed,
		rr.MONEY as rechargeMoney,
		CASE WHEN rbt.ACCOUNT>0 THEN '是' ELSE '否' END as
		tenderPassed,
		rbt.ACCOUNT as tenderMoney,
		CASE WHEN rc.TOTAL>0 THEN '是' ELSE '否' END as
		cashPassed,
		rc.TOTAL as cashMoney,
		rr.MONEY-rc.TOTAL as diffMoney
		from rocky_member rm
		LEFT
		JOIN rocky_realname_appro rra on rm.id=rra.user_id
		LEFT JOIN
		rocky_mobile_appro rma on rm.id=rma.user_id
		LEFT JOIN rocky_email_appro
		rea on rm.id=rea.user_id
		LEFT JOIN rocky_vip_appro rva on
		rm.id=rva.user_id
		LEFT JOIN rocky_rechargerecord rr on rm.id=rr.user_id
		LEFT JOIN rocky_b_tenderrecord rbt on rm.id=rbt.user_id
		LEFT JOIN
		rocky_cashrecord rc on rm.id=rc.user_id
		LEFT JOIN rocky_configuration
		rcf on rm.SOURCE=rcf.`NAME` and rcf.type=1101
		LEFT JOIN (
		select
		USER_ID, sum(TOTAL) as TOTAL from (
		select USER_ID, TOTAL from rocky_account
		union all
		select USER_ID, TOTAL from t_cur_account
		union all
		SELECT USER_ID, ACCOUNT from t_fix_tender_detail WHERE `STATUS` = 0
		union all
		SELECT USER_ID, REPAY_ACCOUNT from t_fix_collectionrecord WHERE `STATUS` = 0
		) t group by USER_ID
		) zcze on rm.id=zcze.user_id
		where 1=1
		<if test="source != null and source != ''">
			and rm.SOURCE = #{source}
		</if>
		<if test="beginTime != null">
			and FROM_UNIXTIME(rm.ADDTIME) >= #{beginTime}
		</if>
		<if test="endTime != null">
			and FROM_UNIXTIME(rm.ADDTIME) &lt; #{endTime}
		</if>
		order by rm.ADDTIME
	</select>
	<select id="queryMemberTenderRecordList"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="com.cxdai.console.statistics.tender.entity.MemberTenderRecordVo">
		SELECT t.USER_ID,m.USERNAME as userName,t.type as tenderType,t.ACCOUNT
		as tenderMoney,t.APR as apr,t.ADDTIME as
		tenderDate,a.total+IFNULL(ca.TOTAL,0)+IFNULL(fc.total,0) as
		accountTotal FROM(
		SELECT ftd.USER_ID,CASE WHEN AREA_TYPE=1 or (AREA_TYPE=0 and
		AREA_CHANGE_TIME is not null) THEN '新手宝' ELSE fb.`NAME` END as
		type,ftd.ACCOUNT as ACCOUNT,fb.APR as APR,ftd.ADDTIME as ADDTIME FROM
		t_fix_tender_detail ftd
		LEFT JOIN t_fix_borrow fb on fb.ID=ftd.FIX_BORROW_ID
		WHERE ftd.`STATUS` IN(1,3)
		UNION ALL
		SELECT bt.USER_ID,'散标' as type,bt.ACCOUNT as ACCOUNT,b.APR as
		APR,FROM_UNIXTIME(bt.ADDTIME,'%Y-%m-%d %H:%i:%s') as ADDTIME FROM
		rocky_b_tenderrecord bt
		LEFT JOIN rocky_borrow b ON b.id=bt.BORROW_ID
		WHERE b.`STATUS` IN(4,5,42) AND bt.PARENT_ID IS NULL and
		bt.FIRST_TENDER_REAL_ID is null and bt.USER_ID&lt;100000000
		UNION ALL
		SELECT bs.USER_ID,'债权转让' as type,bs.ACCOUNT as ACCOUNT,bt.CUR_APR as
		APR,bs.ADD_TIME as ADDTIME FROM rocky_b_subscribe bs
		LEFT JOIN rocky_b_transfer bt on bt.ID= bs.TRANSFER_ID
		WHERE bs.`STATUS`=3
		UNION ALL
		SELECT ftd.USER_ID,'直通车' as type,ftd.ACCOUNT as ACCOUNT,null as
		APR,ftd.ADDTIME as ADDTIME FROM t_first_tender_detail ftd
		WHERE ftd.`STATUS`=1
		UNION ALL
		SELECT USER_ID,'直通车转让' as type,ACCOUNT as ACCOUNT,null as APR,ADD_TIME as
		ADDTIME from t_first_subscribe fs WHERE fs.`STATUS`=3
		)t LEFT JOIN rocky_member m on t.USER_ID=m.id
		LEFT JOIN rocky_account a on a.USER_ID=m.ID
		LEFT JOIN t_cur_account ca on ca.USER_ID=m.ID
		LEFT JOIN (SELECT SUM(REPAY_ACCOUNT)total,USER_ID FROM
		t_fix_collectionrecord WHERE `STATUS`=0 GROUP BY USER_ID)fc on
		fc.USER_ID=m.ID
		where 1=1
		<if test="source != null and source != ''">
			and t.type = #{source}
		</if>
		<if test="beginTime != null and beginTime != ''">
			and t.ADDTIME &gt;= #{beginTime}
		</if>
		<if test="endTime != null and endTime != ''">
			and t.ADDTIME &lt; DATE_ADD(#{endTime},INTERVAL 1 DAY)
		</if>
		<if test="userName != null and userName != ''">
			and m.USERNAME = #{userName}
		</if>
		ORDER BY t.ADDTIME DESC
	</select>
	<select id="queryMemberTenderRecordCount"
		parameterType="com.cxdai.console.statistics.tender.entity.OperationCnd"
		resultType="java.lang.Integer">
		SELECT count(1) FROM(
		SELECT ftd.USER_ID,CASE WHEN AREA_TYPE=1 or (AREA_TYPE=0 and
		AREA_CHANGE_TIME is not null) THEN '新手宝' ELSE fb.`NAME` END as
		type,ftd.ACCOUNT as ACCOUNT,fb.APR as APR,ftd.ADDTIME as ADDTIME FROM
		t_fix_tender_detail ftd
		LEFT JOIN t_fix_borrow fb on fb.ID=ftd.FIX_BORROW_ID
		WHERE ftd.`STATUS` IN(1,3)
		UNION ALL
		SELECT bt.USER_ID,'散标' as type,bt.ACCOUNT as ACCOUNT,b.APR as
		APR,FROM_UNIXTIME(bt.ADDTIME,'%Y-%m-%d %H:%i:%s') as ADDTIME FROM
		rocky_b_tenderrecord bt
		LEFT JOIN rocky_borrow b ON b.id=bt.BORROW_ID
		WHERE b.`STATUS` IN(4,5,42) AND bt.PARENT_ID IS NULL and
		bt.FIRST_TENDER_REAL_ID is null and bt.USER_ID &lt;100000000
		UNION ALL
		SELECT bs.USER_ID,'债权转让' as type,bs.ACCOUNT as ACCOUNT,bt.CUR_APR as
		APR,bs.ADD_TIME as ADDTIME FROM rocky_b_subscribe bs
		LEFT JOIN rocky_b_transfer bt on bt.ID= bs.TRANSFER_ID
		WHERE bs.`STATUS`=3
		UNION ALL
		SELECT ftd.USER_ID,'直通车' as type,ftd.ACCOUNT as ACCOUNT,null as
		APR,ftd.ADDTIME as ADDTIME FROM t_first_tender_detail ftd
		WHERE ftd.`STATUS`=1
		UNION ALL
		SELECT USER_ID,'直通车转让' as type,ACCOUNT as ACCOUNT,null as APR,ADD_TIME as
		ADDTIME from t_first_subscribe fs WHERE fs.`STATUS`=3
		)t LEFT JOIN rocky_member m on t.USER_ID=m.id
		where 1=1
		<if test="source != null and source != ''">
			and t.type = #{source}
		</if>
		<if test="beginTime != null and beginTime != ''">
			and t.ADDTIME &gt;= #{beginTime}
		</if>
		<if test="endTime != null and endTime != ''">
			and t.ADDTIME &lt; DATE_ADD(#{endTime},INTERVAL 1 DAY)
		</if>
		<if test="userName != null and userName != ''">
			and m.USERNAME = #{userName}
		</if>
	</select>
</mapper>  